{
  "hash": "ee2dbf5306f823be9a548a74d076f95e",
  "result": {
    "engine": "knitr",
    "markdown": "# Introduction to R and RStudio\n\n\n## Welcome!\n\nThis lesson will get you up and running with R and RStudio, the tools we'll be using throughout this module. You'll learn how to install the software, explore the RStudio interface, and run your first R commands. We'll also cover the crucial role of version control for all of your projects.\n\n## Learning Objectives\n\n*   Install R and RStudio.\n*   Understand the different panels in RStudio.\n*   Run basic R commands.\n*   Install and load R packages.\n*   Download sample data.\n*   Inspect a csv file using RStudio.\n*   Understand the basics of Version Control\n*   Understand the basics of a working branch in version control\n\n## Installing R\n\n1.  **Go to the CRAN website:** [https://cran.r-project.org/](https://cran.r-project.org/)\n2.  **Choose your operating system:** (Windows, macOS, or Linux)\n3.  **Download the installer:** Select the appropriate download link for your system.\n4.  **Run the installer:** Follow the on-screen instructions to install R.\n\n## Installing RStudio\n\nRStudio is an integrated development environment (IDE) that makes working with R much easier and more productive.\n\n1.  **Go to the RStudio website:** [https://www.rstudio.com/products/rstudio/download/](https://www.rstudio.com/products/rstudio/download/)\n2.  **Download RStudio Desktop:** Select the free RStudio Desktop version.\n3.  **Choose your operating system:** Select the appropriate installer for your system.\n4.  **Run the installer:** Follow the on-screen instructions to install RStudio.\n\n## Exploring RStudio\n\nOpen RStudio. You'll see four main panels:\n\n1.  **Source Editor (Top-Left):** This is where you write and save your R scripts.\n2.  **Console (Bottom-Left):** This is where you execute individual R commands and see the output.\n3.  **Environment/History (Top-Right):**\n    *   **Environment:** Shows a list of loaded data, variables, and functions.\n    *   **History:** Shows a history of commands you've entered.\n4.  **Files/Plots/Packages/Help (Bottom-Right):**\n    *   **Files:** Allows you to browse your computer's file system.\n    *   **Plots:** Displays any plots or graphs you create.\n    *   **Packages:** Allows you to install, update, and load R packages.\n    *   **Help:** Provides documentation for R functions and packages.\n\n## Running Basic R Commands\n\n1.  **In the Console panel:** Type the following commands and press Enter after each one:\n\n    ```r\n    1 + 1\n    x <- 10\n    print(x)\n    ```\n\n    You should see the output of the commands printed in the console.\n\n2.  **Create a new R Script:**\n    *   Click File -> New File -> R Script.\n    *   Type the same commands from above into the script.\n    *   Save the script as `lesson1.R`.\n\n3.  **Run the script:**\n    *   Click the \"Source\" button in the script editor (or press Ctrl+Shift+Enter).\n    *   The commands in the script will be executed in the console.\n\n## Installing and Loading Packages\n\nR packages are collections of functions, data, and documentation that extend the capabilities of R. The `tidyverse` package is a collection of popular packages for data science.\n\n1.  **Install the `tidyverse` package:** In the Console, type the following command and press Enter:\n\n    ```r\n    install.packages(\"tidyverse\")\n    ```\n\n    R will download and install the `tidyverse` package and its dependencies.  This may take a few minutes.\n\n2.  **Load the `tidyverse` package:** In the Console or in your script, type the following command and press Enter:\n\n    ```r\n    library(tidyverse)\n    ```\n\n    This loads the `tidyverse` package into your R session, making its functions available for use.\n\n## Downloading Sample Data\n\nWe'll use a sample CSV file for demonstration.\n\n*   **Download the `exam_scores.csv` file** from the course materials to your data directory. You can also copy this link for downloading directly into R.: [Sample CSV Data](https://raw.githubusercontent.com/datasciencetooling/sample-datasets/main/exam_scores.csv)\n\n## Inspecting Data\n\nNow, let's read the `exam_scores.csv` file into R and inspect it:\n\n```{.r}\n#Replace this link with your actual link to your data.\n\nexam_scores <- read_csv(\"https://raw.githubusercontent.com/datasciencetooling/sample-datasets/main/exam_scores.csv\")\n\n#Display the first few rows.\nhead(exam_scores)\n```\n\n## Data Input and Data Types\n\n### Data Types in R\n\nR supports several fundamental data types:\n\n1.  **Numeric:** Numbers (e.g., `1`, `3.14`, `-2.5`).\n2.  **Character:** Text strings (e.g., `\"hello\"`, `\"Data Analysis\"`).\n3.  **Factor:** Categorical variables (e.g., `\"Low\"`, `\"Medium\"`, `\"High\"`). Factors are important for statistical analysis.\n4.  **Logical:** Boolean values, `TRUE` or `FALSE`.\n5.  **Date:** Dates and times (e.g., `\"2023-10-27\"`).\n\n### Checking Data Types\n\nThe `class()` function tells you the data type of a variable:\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- 10\nclass(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n\n```{.r .cell-code}\ny <- \"hello\"\nclass(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"character\"\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n### Converting Data Types\nYou can convert between data types using the `as.*()` functions:\n\n```\nas.numeric()\n\nas.character()\n\nas.factor()\n\nas.logical()\n\nas.Date()\n\n```\n\n>*Example:*\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- \"123\"\nclass(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"character\"\n```\n\n\n:::\n\n```{.r .cell-code}\nx_numeric <- as.numeric(x)\nclass(x_numeric)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n:::{callout-note}\n### Important Note: \n\nConverting a character string that doesn't represent a number to numeric will result in NA.\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}